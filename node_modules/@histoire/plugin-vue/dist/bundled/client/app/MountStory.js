import { createApp as s, h as m, Suspense as y } from "vue";
import { defineComponent as f, ref as c, watch as p, onMounted as l, onUnmounted as d, h as S } from "@histoire/vendors/vue";
import * as n from "virtual:$histoire-setup";
import * as e from "virtual:$histoire-generated-global-setup";
import { registerGlobalComponents as h } from "./global-components.js";
import { RouterLinkStub as v } from "./RouterLinkStub.js";
const C = f({
  name: "MountStory",
  props: {
    story: {
      type: Object,
      required: !0
    }
  },
  setup(o) {
    const r = c();
    let t;
    async function u() {
      t = s({
        name: "MountStorySubApp",
        render: () => m(y, [
          m(o.story.file.component, {
            story: o.story
          })
        ])
      }), h(t), t.component("RouterLink", v), typeof (e == null ? void 0 : e.setupVue3) == "function" && await e.setupVue3({
        app: t,
        story: o.story,
        variant: null
      }), typeof (n == null ? void 0 : n.setupVue3) == "function" && await n.setupVue3({
        app: t,
        story: o.story,
        variant: null
      });
      const a = document.createElement("div");
      r.value.appendChild(a), t.mount(a);
    }
    function i() {
      t == null || t.unmount();
    }
    return p(() => o.story.id, async () => {
      i(), await u();
    }), l(async () => {
      await u();
    }), d(() => {
      i();
    }), {
      el: r
    };
  },
  render() {
    return S("div", {
      ref: "el"
    });
  }
});
export {
  C as default
};
